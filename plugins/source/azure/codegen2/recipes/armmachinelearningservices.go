// Code generated by codegen; DO NOT EDIT.
package recipes

import "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/machinelearningservices/armmachinelearningservices"

func Armmachinelearningservices() []Table {
	tables := []Table{
		{
      Name: "private_endpoint_connection",
      Struct: &armmachinelearningservices.PrivateEndpointConnection{},
      ResponseStruct: &armmachinelearningservices.PrivateEndpointConnectionsClientListResponse{},
      Client: &armmachinelearningservices.PrivateEndpointConnectionsClient{},
      ListFunc: (&armmachinelearningservices.PrivateEndpointConnectionsClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewPrivateEndpointConnectionsClient,
		},
		{
      Name: "usage",
      Struct: &armmachinelearningservices.Usage{},
      ResponseStruct: &armmachinelearningservices.UsagesClientListResponse{},
      Client: &armmachinelearningservices.UsagesClient{},
      ListFunc: (&armmachinelearningservices.UsagesClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewUsagesClient,
		},
		{
      Name: "resource_quota",
      Struct: &armmachinelearningservices.ResourceQuota{},
      ResponseStruct: &armmachinelearningservices.QuotasClientListResponse{},
      Client: &armmachinelearningservices.QuotasClient{},
      ListFunc: (&armmachinelearningservices.QuotasClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewQuotasClient,
		},
		{
      Name: "workspace_connection",
      Struct: &armmachinelearningservices.WorkspaceConnection{},
      ResponseStruct: &armmachinelearningservices.WorkspaceConnectionsClientListResponse{},
      Client: &armmachinelearningservices.WorkspaceConnectionsClient{},
      ListFunc: (&armmachinelearningservices.WorkspaceConnectionsClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewWorkspaceConnectionsClient,
		},
		{
      Name: "aml_user_feature",
      Struct: &armmachinelearningservices.AmlUserFeature{},
      ResponseStruct: &armmachinelearningservices.WorkspaceFeaturesClientListResponse{},
      Client: &armmachinelearningservices.WorkspaceFeaturesClient{},
      ListFunc: (&armmachinelearningservices.WorkspaceFeaturesClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewWorkspaceFeaturesClient,
		},
		{
      Name: "compute_resource",
      Struct: &armmachinelearningservices.ComputeResource{},
      ResponseStruct: &armmachinelearningservices.ComputeClientListResponse{},
      Client: &armmachinelearningservices.ComputeClient{},
      ListFunc: (&armmachinelearningservices.ComputeClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewComputeClient,
		},
		{
      Name: "operation",
      Struct: &armmachinelearningservices.Operation{},
      ResponseStruct: &armmachinelearningservices.OperationsClientListResponse{},
      Client: &armmachinelearningservices.OperationsClient{},
      ListFunc: (&armmachinelearningservices.OperationsClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewOperationsClient,
		},
		{
      Name: "workspace_sku",
      Struct: &armmachinelearningservices.WorkspaceSKU{},
      ResponseStruct: &armmachinelearningservices.WorkspaceSKUsClientListResponse{},
      Client: &armmachinelearningservices.WorkspaceSKUsClient{},
      ListFunc: (&armmachinelearningservices.WorkspaceSKUsClient{}).NewListPager,
			NewFunc: armmachinelearningservices.NewWorkspaceSKUsClient,
		},
	}

	for i := range tables {
		tables[i].Service = "armmachinelearningservices"
		tables[i].Template = "list"
	}
	return tables
}

func init() {
  Tables = append(Tables, Armmachinelearningservices()...)
}